{"is_source_file": true, "format": "TypeScript", "description": "This file handles updating a specific note by ID in a web API, processing HTTP PUT requests to modify note data stored in the event context.", "external_files": ["h3"], "external_methods": ["readBody", "getRouterParam", "createError"], "published": [], "classes": [], "methods": [{"name": "defineEventHandler", "description": "Defines an event handler for processing HTTP requests for a specific route."}, {"name": "readBody", "description": "Reads and parses the request body into a specified type."}, {"name": "getRouterParam", "description": "Retrieves route parameter values from the event object."}, {"name": "createError", "description": "Creates and throws an HTTP error with specific status code and message."}], "calls": ["readBody", "getRouterParam", "createError"], "search-terms": ["notes_frontend", "server/api/notes/[id].put.ts", "update note", "HTTP PUT", "route parameter", "note ID", "event handler"], "state": 2, "file_id": 14, "knowledge_revision": 31, "git_revision": "ab4b8dda370bc087103ebfe015d1017f08367b81", "ctags": [{"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/server/api/notes/[id].put.ts", "pattern": "/^  const body = await readBody<{ title: string; content: string }>(event)$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/server/api/notes/[id].put.ts", "pattern": "/^  const id = getRouterParam(event, 'id') as string$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/server/api/notes/[id].put.ts", "pattern": "/^  const idx = (notes as any[]).findIndex((n: any) => n.id === id)$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/server/api/notes/[id].put.ts", "pattern": "/^  const notes = (storage.notes ||= [])$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "prev", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/server/api/notes/[id].put.ts", "pattern": "/^  const prev = (notes as any[])[idx]$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "storage", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/server/api/notes/[id].put.ts", "pattern": "/^  const storage = event.context.storage ||= {}$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/server/api/notes/[id].put.ts", "pattern": "/^  const updated = { ...prev, ...body, updatedAt: new Date().toISOString() }$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/server/api/notes/[id].put.ts", "pattern": "/^  const updated = { ...prev, ...body, updatedAt: new Date().toISOString() }$/", "language": "TypeScript", "kind": "constant"}], "hash": "3bd8fc5d26ac4952abdad54820038c5b", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/server/api/notes/[id].put.ts", "revision_history": [{"31": "ab4b8dda370bc087103ebfe015d1017f08367b81"}]}