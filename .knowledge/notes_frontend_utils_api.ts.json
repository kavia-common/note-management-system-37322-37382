{"is_source_file": true, "format": "TypeScript", "description": "This file provides utility functions for handling feature flags and constructing API request URLs within a Nuxt frontend application. It includes a function to parse feature flags from different formats and functions to determine the API base URL and fetch data from the API endpoints.", "external_files": ["$fetch", "useRuntimeConfig"], "external_methods": ["$fetch"], "published": ["getApiBase", "apiFetch"], "classes": [], "methods": [{"name": "function parseFeatureFlags(raw: string | undefined): FeatureFlags { parseFeatureFlags", "description": "Parses feature flags from a JSON string or key=value comma-separated string into a FeatureFlags object.", "scope": "", "scopeKind": ""}, {"name": "export function getApiBase(): string { getApiBase", "description": "Returns the API base URL, considering whether to use an external backend URL based on feature flags and runtime configuration.", "scope": "", "scopeKind": ""}, {"name": "export async function apiFetch<T>(path: string, opts?: any): Promise<T> { apiFetch", "description": "A wrapper around $fetch to fetch data from the API, prefixing the path with the resolved API base URL.", "scope": "", "scopeKind": ""}], "calls": ["JSON.parse", "$fetch"], "search-terms": ["FeatureFlags", "parseFeatureFlags", "getApiBase", "apiFetch", "useRuntimeConfig", "$fetch", "featureFlags", "backendUrl", "apiBase"], "state": 2, "file_id": 9, "knowledge_revision": 38, "git_revision": "ab4b8dda370bc087103ebfe015d1017f08367b81", "ctags": [{"_type": "tag", "name": "FeatureFlags", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^type FeatureFlags = Record<string, string | boolean>$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "apiFetch", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^export async function apiFetch<T>(path: string, opts?: any): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^  const base = getApiBase()$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "cfg", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^  const cfg = useRuntimeConfig()$/", "language": "TypeScript", "kind": "constant", "scope": "getApiBase", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^    const data = JSON.parse(raw)$/", "language": "TypeScript", "kind": "constant", "scope": "parseFeatureFlags", "scopeKind": "function"}, {"_type": "tag", "name": "featureFlags", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^  const featureFlags = parseFeatureFlags(pub?.featureFlags)$/", "language": "TypeScript", "kind": "constant", "scope": "getApiBase", "scopeKind": "function"}, {"_type": "tag", "name": "flags", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^  const flags: FeatureFlags = {}$/", "language": "TypeScript", "kind": "constant", "scope": "parseFeatureFlags", "scopeKind": "function"}, {"_type": "tag", "name": "getApiBase", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^export function getApiBase(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "k", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^    const [k, ...rest] = part.split('=')$/", "language": "TypeScript", "kind": "constant", "scope": "parseFeatureFlags", "scopeKind": "function"}, {"_type": "tag", "name": "parseFeatureFlags", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^function parseFeatureFlags(raw: string | undefined): FeatureFlags {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "part", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^  for (const part of String(raw).split(',').map(s => s.trim()).filter(Boolean)) {$/", "language": "TypeScript", "kind": "constant", "scope": "parseFeatureFlags", "scopeKind": "function"}, {"_type": "tag", "name": "pub", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^  const pub = cfg.public as any$/", "language": "TypeScript", "kind": "constant", "scope": "getApiBase", "scopeKind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^  const url = `${base}${path.startsWith('\\/') ? '' : '\\/'}${path}`$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "useExternal", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^  const useExternal = Boolean(featureFlags['USE_EXTERNAL_BACKEND'] || featureFlags['use_external/", "language": "TypeScript", "kind": "constant", "scope": "getApiBase", "scopeKind": "function"}, {"_type": "tag", "name": "v", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^    const v = rest.join('=')$/", "language": "TypeScript", "kind": "constant", "scope": "parseFeatureFlags", "scopeKind": "function"}, {"_type": "tag", "name": "val", "path": "/home/kavia/workspace/code-generation/note-management-system-37322-37382/notes_frontend/utils/api.ts", "pattern": "/^    const val =$/", "language": "TypeScript", "kind": "constant", "scope": "parseFeatureFlags", "scopeKind": "function"}], "hash": "7a7d717f65b7985db71900468eec7769", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/utils/api.ts", "revision_history": [{"38": "ab4b8dda370bc087103ebfe015d1017f08367b81"}]}